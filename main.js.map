{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/api.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export { initProfileSection, getInitialCards, sendProfileData, sendCardData, deleteCard, likeCard, unLikeCard, setNewAvatar, isUrlExist };\r\n\r\nconst config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\r\n    headers: {\r\n      authorization: 'aefb9d6c-0be1-424f-9825-78d813242522',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\nfunction handleResponse(res){\r\n    if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nfunction initProfileSection() {\r\n    return fetch( `${config.baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction getInitialCards() {\r\n    return fetch( `${config.baseUrl}/cards`, {\r\n        method: 'GET',\r\n        headers: config.headers,\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction sendProfileData(name, about) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify( {\r\n            name: name,\r\n            about: about\r\n        } )\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction sendCardData(name, link) {\r\n    return fetch( `${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify( {\r\n            name: name,\r\n            link: link\r\n          } )\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction deleteCard(cardId) {\r\n    return fetch( `${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    } )\r\n    .then(handleResponse)\r\n    \r\n}\r\n\r\nfunction likeCard(cardId) {\r\n    return fetch( `${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: config.headers,\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction unLikeCard(cardId) {\r\n    return fetch( `${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers,\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction setNewAvatar(avatarUrl) {\r\n    return fetch( `${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify( {\r\n            avatar: avatarUrl\r\n        } )\r\n    } )\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction isUrlExist(avatarUrl) {\r\n    return fetch( avatarUrl, {\r\n        method: 'HEAD'\r\n    } )\r\n}\r\n","export { openPopup, closePopup }\r\n\r\nfunction openPopup(popupElem) {\r\n    popupElem.classList.add('popup_is-opened');\r\n    \r\n    document.addEventListener('click', closeOnClickHandle);\r\n    document.addEventListener('keydown', closeOnEscPressHandle);\r\n}\r\n\r\nfunction closePopup(popupElem) {\r\n    popupElem.classList.remove('popup_is-opened');\r\n\r\n    document.removeEventListener('click', closeOnClickHandle);\r\n    document.removeEventListener('keydown', closeOnEscPressHandle);\r\n}\r\n\r\nfunction closeOnClickHandle(evt) {\r\n    if ( evt.target.classList.contains('popup__close') || evt.target.classList.contains('popup') ) closePopup( document.querySelector('.popup_is-opened') );\r\n}\r\n\r\nfunction closeOnEscPressHandle(evt) {\r\n    if (evt.key === 'Escape') closePopup( document.querySelector('.popup_is-opened') );\r\n};\r\n\r\n","export { createCardElem, handleLikeClick, deleteListItem, openConfirmDeletePopup };\r\nimport { likeCard, unLikeCard, deleteCard } from '../api';\r\nimport { closePopup, openPopup } from './modal';\r\n\r\nfunction createCardElem( name, picture, setImageTypePopup, handleLikeClick, likesQuantityValue, ownerId, cardId, likesArray, myId, deleteListItem, openConfirmDeletePopup) {\r\n    const cardTemplate = document.querySelector('#card-template').content;\r\n    const placesItemClone = cardTemplate.cloneNode('#card-template');\r\n    const likeButton = placesItemClone.querySelector('.card__like-button');\r\n    const cardImage = placesItemClone.querySelector('.card__image');\r\n    const cardTitle = placesItemClone.querySelector('.card__title');\r\n    const deleteButton = placesItemClone.querySelector('.card__delete-button');\r\n    const likesQuantityElem = placesItemClone.querySelector('.card__likes-quantity');\r\n    const deleteConfirmButton = document.querySelector('.popup__button_delete-confirm');\r\n    const popupTypeDeleteConfirm = document.querySelector('.popup_type_delete-confirm');\r\n    const placesItem = placesItemClone.querySelector('.places__item')\r\n    const isLikedByMe = likesArray.some( (likeObj) => {\r\n        return likeObj._id === myId\r\n      } );\r\n    const matchIdResult = myId === ownerId;\r\n    cardTitle.textContent = name;\r\n    cardImage.src = picture;\r\n    cardImage.alt = name;\r\n\r\n    placesItem.setAttribute('id', `${cardId}`)\r\n\r\n    if (isLikedByMe) likeButton.classList.toggle('card__like-button_is-active')\r\n\r\n    if (likesQuantityValue) {\r\n        likesQuantityElem.textContent = likesQuantityValue;\r\n    }\r\n\r\n    if (matchIdResult) {\r\n        deleteButton.style.display = 'inline-block';\r\n        deleteButton.addEventListener( 'click', () => openConfirmDeletePopup(popupTypeDeleteConfirm, deleteConfirmButton, deleteListItem, cardId));\r\n    }\r\n\r\n    cardImage.addEventListener('click', setImageTypePopup);\r\n    likeButton.addEventListener( 'click', (evt) => {\r\n        handleLikeClick(evt, cardId, likesQuantityElem)\r\n    } );\r\n    \r\n    return placesItemClone;\r\n}\r\n\r\nfunction openConfirmDeletePopup(confirmPopup, confirmButton, deleteFunc, cardId) {\r\n    openPopup(confirmPopup);\r\n    confirmButton.setAttribute('data-card-to-delete-id', `${cardId}`)\r\n    confirmButton.addEventListener('click', deleteFunc)\r\n}\r\n    \r\nfunction deleteListItem(evt) {\r\n    const cardId = evt.target.getAttribute('data-card-to-delete-id');\r\n    const cardToDelete = document.getElementById(`${cardId}`); //здесь не разобрался почему не работает document.querySelector(`#${cardId}`), поэтому оставил getElementById\r\n    const confirmPopupOpened = document.querySelector('.popup_is-opened')\r\n    deleteCard(cardId)\r\n    .then( () => {\r\n    cardToDelete.remove();\r\n    evt.target.removeEventListener('click', deleteListItem)\r\n    closePopup(confirmPopupOpened);\r\n    } )\r\n    .catch( (err) => {\r\n        console.log(err);\r\n    } )\r\n    };\r\n\r\nfunction handleLikeClick(evt, cardId, likesQuantityElem) {   \r\n    if (!evt.target.classList.contains('card__like-button_is-active')) {\r\n        likeCard(cardId)\r\n        .then((res) => {\r\n            likesQuantityElem.textContent = res.likes.length;\r\n            evt.target.classList.toggle('card__like-button_is-active');\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err);\r\n        } )\r\n    } else {\r\n        unLikeCard(cardId)\r\n        .then((res) => {\r\n            likesQuantityElem.textContent = res.likes.length || '';\r\n            evt.target.classList.toggle('card__like-button_is-active');\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err);\r\n        } )\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n","export { enableValidation, clearValidation }\r\n\r\nfunction showInputError(errElement, formField, inputErrorClass) {\r\n    formField.classList.add(inputErrorClass);\r\n\r\n    if (formField.validity.patternMismatch) {\r\n        formField.setCustomValidity( formField.getAttribute('data-error-message') );\r\n    } else {\r\n        formField.setCustomValidity('');\r\n    }\r\n\r\n    errElement.textContent = formField.validationMessage;\r\n}\r\n\r\nfunction hideInputError(errElement, formField, inputErrorClass) {\r\n    formField.classList.remove(inputErrorClass);\r\n    errElement.textContent = '';\r\n}\r\n\r\nfunction hasInvalid(form, formFieldSelector) {\r\n    const formFieldsArr = Array.from( form.querySelectorAll(`.${formFieldSelector}`) );\r\n\r\n    return formFieldsArr.some( (formField) => {\r\n        if (!formField.validity.valid) {\r\n            return true;\r\n        };\r\n    } )\r\n}\r\n\r\nfunction toggleButtonState(containsElement, inactiveButtonClass, ButtonClass, formFieldSelector) {\r\n    const button = containsElement.querySelector(`.${ButtonClass}`);\r\n\r\n    if ( hasInvalid(containsElement, formFieldSelector) ) {\r\n        button.classList.add(inactiveButtonClass);\r\n        button.setAttribute('disabled', '');\r\n    } else {\r\n        button.classList.remove(inactiveButtonClass);\r\n        button.removeAttribute('disabled', '');\r\n    }\r\n}\r\n\r\nfunction isValid(form, formField, inputErrorClass) {\r\n    const errElement = form.querySelector(`.${formField.id}-error`);\r\n    \r\n    if(formField.validity.valid) {\r\n        hideInputError(errElement, formField, inputErrorClass);\r\n    } else {\r\n        showInputError(errElement, formField, inputErrorClass);\r\n    }\r\n}\r\n\r\nfunction setEventListeners(form, inputErrorClass, inputSelector, inactiveButtonClass, ButtonClass) {\r\n    const formFieldsList = form.querySelectorAll(`.${inputSelector}`);\r\n\r\n    formFieldsList.forEach( (formField) => formField.addEventListener( 'input', () => {\r\n        isValid(form, formField, inputErrorClass);\r\n        toggleButtonState(form, inactiveButtonClass, ButtonClass, inputSelector);\r\n    } ) )\r\n}\r\n\r\nfunction enableValidation(configObj) {\r\n    const formsArr = document.querySelectorAll(`.${configObj.formSelector}`);\r\n\r\n    formsArr.forEach( (form) => {\r\n        setEventListeners(form, configObj.inputErrorClass, configObj.inputSelector, configObj.inactiveButtonClass, configObj.submitButtonSelector)\r\n    } )\r\n}\r\n\r\nfunction clearValidation(form, configObj) {\r\n    const formFieldsList = form.querySelectorAll(`.${configObj.inputSelector}`);\r\n\r\n    form.reset();\r\n\r\n    toggleButtonState(form, configObj.inactiveButtonClass, configObj.submitButtonSelector, configObj.inputSelector)\r\n    formFieldsList.forEach( (formField) => {\r\n        const errElement = form.querySelector(`.${formField.id}-error`);\r\n        \r\n        hideInputError(errElement, formField, configObj.inputErrorClass);\r\n    } )\r\n}","import '../src/pages/index.css';\r\nimport { createCardElem, handleLikeClick, deleteListItem, openConfirmDeletePopup } from './components/card';\r\nimport { openPopup, closePopup } from './components/modal';\r\nimport { enableValidation, clearValidation } from './validation';\r\nimport { initProfileSection, getInitialCards, sendProfileData, sendCardData, setNewAvatar, isUrlExist  } from './api';\r\n\r\nconst placesList = document.querySelector('.places__list');\r\nconst editProfileForm = document.forms['edit-profile'];\r\nconst newAvatarForm = document.forms['new-avatar'];\r\nconst avatarUrl = newAvatarForm.link;\r\nconst nameInput = editProfileForm.name;\r\nconst descriptionInput = editProfileForm.description;\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst newPlaceform = document.forms['new-place'];\r\nconst placeFormField = newPlaceform['place-name'];\r\nconst pictureFormField = newPlaceform.link;\r\nconst buttonOpenEditProfileForm = document.querySelector('.profile__edit-button');\r\nconst buttonOpenAddCardForm = document.querySelector('.profile__add-button');\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\nconst popupCaption = document.querySelector('.popup__caption');\r\nconst popupImage = document.querySelector('.popup__image');\r\nconst popupTypeNewAvatar = document.querySelector('.popup_type_new-avatar');\r\nconst validationConfig = {\r\n  formSelector: 'popup__form',\r\n  inputSelector: 'popup__input',\r\n  submitButtonSelector: 'popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_invalid',\r\n  errorClass: 'popup__input-error',\r\n}\r\nlet myId;\r\n\r\nfunction setImageTypePopup(evt) {\r\n  popupImage.src = evt.target.src;\r\n  popupImage.alt = evt.target.alt;\r\n  popupCaption.textContent = evt.target.alt;\r\n  openPopup(popupTypeImage);\r\n}\r\n\r\nfunction addNewPlace(evt) {\r\n  changeSubmitBtnState(evt);\r\n\r\n  sendCardData(placeFormField.value, pictureFormField.value)\r\n  .then( (result) => {\r\n    const newCard = createCardElem( result.name, result.link, setImageTypePopup, handleLikeClick, 0, result.owner._id, result._id, result.likes, myId, deleteListItem, openConfirmDeletePopup);\r\n    placesList.prepend(newCard)\r\n  } )\r\n  .catch( (err) => {\r\n      console.log(err);\r\n    } )\r\n  .finally( () => changeSubmitBtnState(evt) );\r\n\r\n  evt.target.reset();\r\n  evt.preventDefault();\r\n  closePopup(popupTypeNewCard);\r\n}\r\n\r\nfunction initEditProfileForm() {\r\n  clearValidation(editProfileForm, validationConfig);\r\n\r\n  nameInput.value = profileName.textContent;\r\n  descriptionInput.value = profileDescription.textContent;\r\n}\r\n\r\nfunction handleEditFormSubmit(evt) {\r\n  changeSubmitBtnState(evt);\r\n\r\n  sendProfileData(nameInput.value, descriptionInput.value)\r\n  .then( (result) => {\r\n    profileName.textContent = result.name;\r\n    profileDescription.textContent = result.about;\r\n  } )\r\n  .catch( (err) => {\r\n      console.log(err);\r\n    } )\r\n  .finally( () => changeSubmitBtnState(evt) );\r\n  \r\n  evt.preventDefault();\r\n\r\n  closePopup(popupTypeEdit);\r\n}\r\n\r\nfunction changeSubmitBtnState(evt) {\r\n  const loadingText = evt.target.querySelector(`.popup__button_loading-text`);\r\n  const initialText = evt.target.querySelector(`.popup__button_initial-text`);\r\n  loadingText.classList.toggle('popup_button_text-is-visible');\r\n  initialText.classList.toggle('popup_button_text-is-visible');\r\n}\r\n\r\nplacesList.addEventListener( 'click', (evt) => {\r\n    if ( evt.target.classList.contains('card__image') ) {\r\n        openPopup(popupTypeImage);\r\n    }\r\n} )\r\n\r\nprofileImage.addEventListener( 'click', () => {\r\n  clearValidation(newAvatarForm, validationConfig);\r\n\r\n  openPopup(popupTypeNewAvatar);\r\n} );\r\n\r\nbuttonOpenEditProfileForm.addEventListener( 'click', () => {\r\n  initEditProfileForm(nameInput, profileName, descriptionInput, profileDescription);\r\n  openPopup(popupTypeEdit);\r\n} );\r\n\r\nbuttonOpenAddCardForm.addEventListener( 'click', () => {\r\n  clearValidation(newPlaceform, validationConfig);\r\n\r\n  openPopup(popupTypeNewCard);\r\n} );\r\n\r\nnewAvatarForm.addEventListener( 'submit', (evt) => {\r\n  evt.preventDefault();\r\n  changeSubmitBtnState(evt);\r\n\r\n  isUrlExist(avatarUrl.value)\r\n  .then( (res) => {\r\n    if ( res.ok && ( res.headers.get('Content-Type').startsWith('image') ) ) {\r\n      setNewAvatar(res.url)\r\n      .then( (res) => {\r\n        profileImage.setAttribute('style', `background-image: url('${res.avatar}')`);\r\n        closePopup(popupTypeNewAvatar);\r\n      } )\r\n    } else {\r\n        return Promise.reject( {\r\n          errorMessage: `Ошибка в isUrlExist ${res.status}`,\r\n          mimeType: res.headers.get('Content-Type')\r\n      } )\r\n    }\r\n} )\r\n  .catch( (err) => {\r\n    console.log(err.errorMessage);\r\n    if (!err.mimeType.startsWith('image')){\r\n      console.log('По указанному Url не изображение');\r\n    }\r\n  } )\r\n  .finally( () => changeSubmitBtnState(evt) )\r\n} )\r\n\r\neditProfileForm.addEventListener( 'submit', (evt) => {\r\n    handleEditFormSubmit(evt);\r\n} );\r\n\r\nnewPlaceform.addEventListener( 'submit', (evt) => {\r\n  addNewPlace(evt);\r\n} );\r\n\r\nenableValidation(validationConfig);\r\n\r\nPromise.all( [ initProfileSection(), getInitialCards() ] )\r\n  .then( ( [profileRes, cardRes] ) => {\r\n    myId = profileRes._id;\r\n\r\n    profileName.textContent = profileRes.name;\r\n    profileDescription.textContent = profileRes.about;\r\n    profileImage.setAttribute('style', `background-image: url('${profileRes.avatar}')`);\r\n\r\n    cardRes.forEach( (card) => {\r\n      placesList.append( createCardElem(card.name, card.link, setImageTypePopup, handleLikeClick, card.likes.length, card.owner._id, card._id, card.likes, myId, deleteListItem, openConfirmDeletePopup) )\r\n    } );\r\n  } )\r\n  .catch( (err) => {\r\n    console.log(err);\r\n  } );\r\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","openPopup","popupElem","classList","add","document","addEventListener","closeOnClickHandle","closeOnEscPressHandle","closePopup","remove","removeEventListener","evt","target","contains","querySelector","key","createCardElem","name","picture","setImageTypePopup","handleLikeClick","likesQuantityValue","ownerId","cardId","likesArray","myId","deleteListItem","openConfirmDeletePopup","placesItemClone","content","cloneNode","likeButton","cardImage","cardTitle","deleteButton","likesQuantityElem","deleteConfirmButton","popupTypeDeleteConfirm","placesItem","isLikedByMe","some","likeObj","_id","matchIdResult","textContent","src","alt","setAttribute","toggle","style","display","confirmPopup","confirmButton","deleteFunc","getAttribute","cardToDelete","getElementById","confirmPopupOpened","fetch","method","then","deleteCard","catch","err","console","log","unLikeCard","likes","length","likeCard","hideInputError","errElement","formField","inputErrorClass","toggleButtonState","containsElement","inactiveButtonClass","ButtonClass","formFieldSelector","button","form","Array","from","querySelectorAll","validity","valid","hasInvalid","removeAttribute","clearValidation","configObj","formFieldsList","inputSelector","reset","submitButtonSelector","forEach","id","placesList","editProfileForm","forms","newAvatarForm","avatarUrl","link","nameInput","descriptionInput","description","profileImage","profileName","profileDescription","newPlaceform","placeFormField","pictureFormField","buttonOpenEditProfileForm","buttonOpenAddCardForm","popupTypeEdit","popupTypeNewCard","popupTypeImage","popupCaption","popupImage","popupTypeNewAvatar","validationConfig","formSelector","errorClass","changeSubmitBtnState","loadingText","initialText","value","preventDefault","isUrlExist","get","startsWith","errorMessage","mimeType","body","JSON","stringify","avatar","setNewAvatar","url","finally","about","result","handleEditFormSubmit","newCard","owner","prepend","addNewPlace","patternMismatch","setCustomValidity","validationMessage","showInputError","isValid","setEventListeners","all","_ref","_ref2","profileRes","cardRes","card","append"],"sourceRoot":""}